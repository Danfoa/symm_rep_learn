hydra:
  run:
    dir: ./paper/results/${proj_name}/${exp_name}/${run_desc}/${hydra.job.override_dirname}
      seed=${seed}
  sweep:
    dir: ./paper/results/${proj_name}/${exp_name}/
    subdir: ${run_desc}/${hydra.job.override_dirname} seed=${seed}
  launcher:
    _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
    n_jobs: -1
    backend: null
    prefer: processes
    require: null
    verbose: 0
    timeout: null
    pre_dispatch: 2*n_jobs
    batch_size: auto
    temp_folder: null
    max_nbytes: null
    mmap_mode: r
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task: []
  job:
    name: ${exp_name}
    chdir: null
    override_dirname: ''
    id: ???
    num: ${seed}
    config_name: GRF_regression
    env_set:
      HYDRA_FULL_ERROR: '1'
      WANDB_START_METHOD: thread
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ' '
        exclude_keys:
        - debug
        - device
        - seed
        - dataset.path
        - exp_name
        - proj_name
        - max_epochs
        - architecture.hidden_units
        - architecture.hidden_layers
        - architecture.activation
        - model
        - lr
        - batch_size
        - max_epochs
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/danfoa/Projects/symm_rep_learn/paper/experiments
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/danfoa/Projects/symm_rep_learn/paper/experiments/cfg
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /home/danfoa/Projects/symm_rep_learn/paper/experiments/paper/results/GRF_regression/test/robot=mini_cheetah_lr=0.001_bs=1024_max_epochs=500_pat=25_NCP_hu=512_hl=4_act=ELU/
      seed=-1
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: joblib
      hydra/output: default
  verbose: false
