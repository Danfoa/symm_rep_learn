defaults:
  - override hydra/launcher: joblib  # Parallel runs

proj_name: "GRF_regression"
exp_name: "test"

seed: -1
debug: False
alpha: 0.1  # (1-alpha) Confidence interval probability.

device: 0  # -1 for all GPUs [0, ..., gpu_id] for a specific GPU
profile: False

# EXPERIMENT CONFIG
robot_name: aliengo  # aliengo / mini_cheetah / a1 / anymal_c
# MODEL CONFIG
model: NCP
truncated_op_bias: 'full_rank'  # 'Cxy' or 'diag' or 'svals'
gamma: 1                        # Weight of the NCP regularization loss term. NCP train best at low gamma values < 0.01
gamma_centering: 0.0           # Weight of the NCP regularization loss term. NCP train best at low gamma values < 0.01
momentum: 0.995

dataset:
  path: 'data/aliengo/perlin/lin_vel=(-1.5, 1.5) ang_vel=(-0.5, 0.5) friction=(0.7, 1.0)/ep=100_steps=1249.h5'
  # Observations that will be concatenated to compose y and x, given y = NN(x)
  x_obs: ['qpos_js', 'qvel_js', 'base_lin_acc:base', 'base_lin_vel:base', 'base_lin_vel_err:base', 'base_ang_vel:base', 'base_ang_vel_err:base', 'gravity_vector:base', 'feet_vel:base', 'tau_ctrl_setpoint']
  y_obs: ['work', 'contact_forces:base', 'feet_vel_rel:base']
  mode: 'static'    # 'static' | 'time_series'. See ProprioceptiveDataset for more details.
  x_frames: 1       # Number of time-frames of observations for x -> (x_frames, x_obs_dim)
  y_frames: 1       # Number of time-frames to consider for y -> (y_frames, y_obs_dim)
  #  Data-augmentation
  augment_train: False       # Augment training data using symmetry transformations. Not useful for equiv models.
  augment_test: True         # This better emulates the real-world scenario in which symmetry related points have equal probability of being observed.
  augment_val:  True         # This better emulates the real-world scenario in which symmetry related points have equal probability of being observed.
  #  Dataset splitting
  train_ratio: 0.7
  val_ratio: 0.15
  #  Dataset loading
  load_to_memory: True    # Load dataset to memory for faster read and batch collection.
  device: 'cpu'           # Device to load the dataset to. 'cpu' or 'cuda'

# Architecture of the neural network
architecture:
  hidden_units: [512,512,512,512]  # List of hidden layer sizes. If a single int is provided, it is used for all layers.
  embedding_dim: 128
  activation: ELU           # Any torch activation
  residual_encoder_x: False   # Introduce target regression variables in L2(Y)
  residual_encoder_y: False   # Introduce target regression variables in L2(Y)
#  bias: True

# OPTIMIZATION CONFIG
optim:
  lr: 5e-4                    # Learning rate NCP train best at low lr values < 1e-3
  patience: 25                # Number of Val checks to wait for improvement before early stopping
  batch_size: 2048            # The higher the best
  max_epochs: 800             # Number of passes before stop training. Early stopping is used.
  dl_num_workers: 0           # Number of workers for data loading
  check_val_every_n_epoch: 5 #

exp_desc: "robot=${robot_name}"
opt_desc: "lr=${optim.lr}_bs=${optim.batch_size}_pat=${optim.patience}"
model_desc: "${model}_hu=${architecture.hidden_units}_act=${architecture.activation}_resY=${architecture.residual_encoder}_momentum=${momentum}_gamma=${gamma}_gamma_centering=${gamma_centering}_trunc_op_bias=${truncated_op_bias}"
run_desc: "${exp_desc}_${opt_desc}_${model_desc}"

hydra:
  run:
    dir: "./paper/results/${proj_name}/${exp_name}/${run_desc}/${hydra.job.override_dirname} seed=${seed}"
  sweep:
    dir: "./paper/results/${proj_name}/${exp_name}/"
    subdir: "${run_desc}/${hydra.job.override_dirname} seed=${seed}"

  job:
    name: ${exp_name}
    num: ${seed}
    env_set:
      HYDRA_FULL_ERROR: '1'
      WANDB_START_METHOD: 'thread'
    config:
      override_dirname:
        kv_sep: "="
        item_sep: " "
        exclude_keys:
          - debug
          - device
          - seed
          - dataset.path
          - exp_name
          - robot_name
          - proj_name
          - max_epochs
          - architecture.hidden_units
          - architecture.hidden_layers
          - architecture.activation
          - architecture.residual_encoder
          - model
          - optim.lr
          - optim.batch_size
          - optim.max_epochs
          # --- ensure all fields used in run_desc are excluded ---
          - optim.patience
          - momentum
          - gamma
          - gamma_centering
          - truncated_op_bias
